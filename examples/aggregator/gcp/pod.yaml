apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregator
  labels:
    app: aggregator
spec:
  containers:
    - name: oak-application
      image: gcr.io/oak-ci/oak-aggregator:latest
      ports:
        - containerPort: 8080
          name: aggregator
        - containerPort: 3030
          name: metrics
      volumeMounts:
        - name: tls-secret
          mountPath: '/etc/oak-secrets'
          readOnly: true
      args:
        - --application=config.bin
        - --ca_cert=/etc/oak-secrets/ca.pem
        - --cert_chain=/etc/oak-secrets/gcp.pem
        - --private_key=/etc/oak-secrets/gcp.key
    - name: backend
      image: gcr.io/oak-ci/oak-aggregator-backend:latest
      env:
        - name: RUST_LOG
          value: info
    # Additional container to scrape prometheus metrics:
    # https://github.com/GoogleCloudPlatform/k8s-stackdriver/tree/master/prometheus-to-sd
    - name: prometheus-to-stackdriver
      image: gcr.io/google-containers/prometheus-to-sd:v0.9.2
      ports:
        - containerPort: 6060
      command:
        - /monitor
        # To be able to push custom metrics to the Stackdriver, the `stackdriver-prefix`
        # flag must be set to `custom.googleapis.com`.
        # Ref: https://github.com/GoogleCloudPlatform/k8s-stackdriver/tree/master/prometheus-to-sd#custom-metrics
        # On custom metrics: https://cloud.google.com/monitoring/custom-metrics#about_custom_metrics
        - --stackdriver-prefix=custom.googleapis.com
        - --source=oak-application:http://localhost:3030/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
  volumes:
    - name: tls-secret
      secret:
        secretName: tls-private-key
  replicas: 1
  selector:
    matchLabels:
      app: aggregator
  template:
    metadata:
      labels:
        app: aggregator
    spec:
      containers:
        - name: oak-application
          image: gcr.io/oak-ci/oak-aggregator:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: tls-secret
              mountPath: '/etc/oak-secrets'
              readOnly: true
          args:
            - --application=config.bin
            - --ca_cert=/etc/oak-secrets/ca.pem
            - --cert_chain=/etc/oak-secrets/gcp.pem
            - --private_key=/etc/oak-secrets/gcp.key
        - name: backend
          image: gcr.io/oak-ci/oak-aggregator-backend:latest
          env:
            - name: RUST_LOG
              value: info
        - name: prometheus
          image: gcr.io/cloud-marketplace/google/prometheus:2.11
          args:
            - "--config.file=/etc/prometheus/config/prometheus.yml"
            - "--storage.tsdb.path=/data"
            - "--storage.tsdb.min-block-duration=15m"
            - "--storage.tsdb.max-block-duration=4h"
            - "--storage.tsdb.retention.time=48h"
          ports:
            - name: prometheus
              containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/config
            - name: metrics-volume
              mountPath: /data
        - name: stackdriver-prometheus-sidecar
          image: gcr.io/stackdriver-prometheus/stackdriver-prometheus-sidecar:0.6.4
          imagePullPolicy: Always
          args:
            - --stackdriver.project-id=oak-ci
            - --prometheus.wal-directory=/data/wal
            - --prometheus.api-address=http://localhost:9090
            - --stackdriver.kubernetes.location=europe-west2
            - --stackdriver.kubernetes.cluster-name=aggregator
            - --log.level=debug
          ports:
            - name: sidecar
              containerPort: 9091
          volumeMounts:
            - name: metrics-volume
              mountPath: /data
      volumes:
        - name: tls-secret
          secret:
            secretName: tls-private-key
        - name: config-volume
          configMap:
            name: prometheus-server-conf
        - name: metrics-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: aggregator
  labels:
    app: aggregator
spec:
  selector:
    app: aggregator
  ports:
    - port: 8080
      name: aggregator
    - port: 9090
      name: prometheus
  type: LoadBalancer
  # This IP address was reserved it Google Cloud. New IP addresses can be reserved at:
  # https://pantheon.corp.google.com/networking/addresses/list?project=oak-ci
  # IP that is used here must not be used anywhere else.
  loadBalancerIP: '35.246.87.178'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s # By default, scrape targets every 15 seconds.
      
      # Attach these labels to any time series or alerts when communicating with
      # external systems (federation, remote storage, Alertmanager).
      external_labels:
        monitor: 'aggregator-monitor'
      
    # A scrape configuration containing exactly one endpoint to scrape:
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: 'aggregator'
      
      # Override the global default and scrape targets from this job every 5 seconds.
        scrape_interval: 5s
      
        static_configs:
          - targets: ['localhost:3030']

